stages:
  # - lint
  - build
  - deploy-dev


# lint:
#   stage: lint
#   tags:
#     - ahmet-test-runner
#   image: node:22.2.0
#   script:
#     - npm install
#     - npm run lint
variables:
  DOCKER_REGISTRY: registry-1.docker.io
  DOCKER_HUB_EMAIL: ahmet.basli@leanscale.com
  DOCKER_HUB_USERNAME: ahmetbaslileanscale
  IMAGE_NAME: $DOCKER_HUB_USERNAME/ahmet-test


.deploy: &deploy
  image:
    name: dtzar/helm-kubectl
    entrypoint: [""]
  script:
    - eval $(minikube docker-env)
    - cd deploy/medusa
    - >
      helm upgrade
      --install
      --namespace medusa
      --create-namespace
      --set image.repository=$DOCKER_REGISTRY/$IMAGE_NAME
      --set image.tag=$CI_COMMIT_SHA
      --set image.pullPolicy=Always



build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - export SANITIZED_COMMIT_BRANCH=$(echo "$CI_COMMIT_BRANCH" | tr '/' '-')
    - export IMAGE_TAG=${CI_COMMIT_SHORT_SHA}-$(echo "$CI_COMMIT_BRANCH" | tr '/' '-')
    - echo -n "$DOCKER_HUB_ACCESS_TOKEN" | docker login $DOCKER_REGISTRY -u $DOCKER_HUB_EMAIL --password-stdin
    - echo "$SANITIZED_COMMIT_BRANCH"
    - echo "$CI_COMMIT_BRANCH"
  script:
    - docker pull $DOCKER_REGISTRY/$IMAGE_NAME:latest-${SANITIZED_COMMIT_BRANCH} || true
    - docker build -t $IMAGE_NAME . --cache-from $DOCKER_REGISTRY/$IMAGE_NAME:latest-${SANITIZED_COMMIT_BRANCH}
    - docker tag $IMAGE_NAME $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
    - docker tag $IMAGE_NAME $DOCKER_REGISTRY/$IMAGE_NAME:latest-$SANITIZED_COMMIT_BRANCH
    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:latest-$SANITIZED_COMMIT_BRANCH



deploy-dev:
  <<: *deploy
  stage: deploy-dev
  variables:
    DEPLOY_ENV: dev
  environment:
    name: dev
    url: https://${CI_PROJECT_NAME}-${DEPLOY_ENV}.dzrt.com
  variables:
    DEPLOY_ENV: dev
  needs:
    - build
  only:
    refs:
      - development
